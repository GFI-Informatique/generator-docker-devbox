FROM php:{{phpVersion}}-{{phpMode}}
{{#if authorName}}LABEL maintainer="{{authorName}}{{#if authorEmail}} <{{authorEmail}}>{{/if}}"{{/if}}
\{{#DOCKER_DEVBOX_COPY_CA_CERTIFICATES}}

COPY .ca-certificates/* /usr/local/share/ca-certificates/
RUN update-ca-certificates
\{{/DOCKER_DEVBOX_COPY_CA_CERTIFICATES}}
{{#inArray phpExtensions "gd"}}

RUN apt-get update -y && apt-get install -y libpng-dev libfreetype6-dev libjpeg62-turbo-dev && rm -rf /var/lib/apt/lists/* \
&& docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
&& docker-php-ext-install gd
{{/inArray}}
{{#inArray phpExtensions "opcache"}}

RUN docker-php-ext-install opcache
{{/inArray}}
{{#inArray phpExtensions "ldap"}}

RUN apt-get update -y && apt-get install -y libldap2-dev && rm -rf /var/lib/apt/lists/* \
&& docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \
&& docker-php-ext-install ldap
{{/inArray}}
{{#inArray phpExtensions "zip"}}

RUN apt-get update -y && apt-get install -y zlib1g-dev libzip-dev && rm -rf /var/lib/apt/lists/* && docker-php-ext-install zip
{{/inArray}}
{{#inArray phpExtensions "xdebug"}}

RUN yes | pecl install xdebug{{#semver phpVersion '<7'}}-2.5.5{{/semver}} \
&& echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
&& echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini \
&& echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini
{{/inArray}}
{{#hasFeature 'postgresql'}}

RUN apt-get update -y && apt-get install -y libpq-dev && rm -rf /var/lib/apt/lists/* && docker-php-ext-install pdo pdo_pgsql
{{/hasFeature}}
{{#hasFeature 'mysql' 'mariadb'}}

RUN docker-php-ext-install pdo pdo_mysql
{{/hasFeature}}
{{> @partial-block }}

{{#inArray phpTools "composer"}}

ENV COMPOSER_HOME /composer
ENV PATH /composer/vendor/bin:$PATH
ENV COMPOSER_ALLOW_SUPERUSER 1

RUN curl -fsSL -o /tmp/composer-setup.php https://getcomposer.org/installer \
&& curl -fsSL -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \
&& php -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }" \
&& php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot && rm -rf /tmp/composer-setup.php \
&& apt-get update -y && apt-get install -y git zip unzip && rm -rf /var/lib/apt/lists/* \
&& composer global require hirak/prestissimo
{{#semver phpVersion '<7'}}
RUN echo "date.timezone=${PHP_TIMEZONE:-UTC}" > $PHP_INI_DIR/conf.d/composer.ini \
&& echo "always_populate_raw_post_data=-1" > $PHP_INI_DIR/conf.d/composer.ini
{{/semver}}
{{/inArray}}
{{#inArray phpTools "symfony-client"}}

RUN curl -fsSL https://get.symfony.com/cli/installer | bash && mv /root/.symfony/bin/symfony /usr/local/bin/symfony
{{/inArray}}
{{#inArray phpTools "drupal-console"}}

RUN curl -fsSL -o /usr/local/bin/drupal https://drupalconsole.com/installer && chmod +x /usr/local/bin/drupal

{{/inArray}}
{{#inArray phpTools "drush-launcher"}}

RUN curl -fsSL -o /usr/local/bin/drush https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar && chmod +x /usr/local/bin/drush
{{#eq phpDrushGlobal "composer"}}

RUN composer global require drush/drush:^{{phpDrushGlobalComposerVersion}} --prefer-dist
{{/eq}}
{{#eq phpDrushGlobal "phar"}}

ADD https://github.com/drush-ops/drush/releases/download/8.3.0/drush.phar /usr/local/bin/drush.phar
RUN chmod +rx /usr/local/bin/drush.phar
ENV DRUSH_LAUNCHER_FALLBACK /usr/local/bin/drush.phar
{{/eq}}

{{/inArray}}
{{#inArray phpTools "phing"}}

RUN curl -fsSL -o /usr/local/bin/phing https://www.phing.info/get/phing-latest.phar && chmod +x /usr/local/bin/phing
{{/inArray}}

{{#inArray nativeClient "PostgreSQL"}}

RUN apt-get update -y && apt-get install -y gnupg lsb-release && rm -rf /var/lib/apt/lists/* \
&& curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
&& echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" >> /etc/apt/sources.list.d/postgresql.list \
&& apt-get update -y && apt-get install -y {{nativeClientPostgreSQLPackage}}-{{nativeClientPostgreSQLVersion}} && rm -rf /var/lib/apt/lists/*
{{/inArray}}
{{#inArray nativeClient "MySQL"}}

RUN apt-get update -y && apt-get install -y debconf-utils lsb-release wget gnupg
RUN echo 'mysql-apt-config mysql-apt-config/select-server select mysql-{{nativeClientMySQLVersion}}' | debconf-set-selections \
&& curl -fsSL -o mysql-apt-config.deb https://dev.mysql.com/get/mysql-apt-config_0.8.13-1_all.deb && dpkg -i mysql-apt-config.deb
RUN apt-get update -y && apt-get install -y {{nativeClientMySQLPackage}} && rm -rf /var/lib/apt/lists/*
{{/inArray}}
{{#inArray nativeClient 'MariaDB'}}

RUN apt-get update -y && apt-get -y install software-properties-common gnupg && \
curl -fsSL https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --mariadb-server-version="mariadb-{{nativeClientMariaDBVersion}}" \
&& apt-get update -y && apt-get install -y {{nativeClientMariaDBPackage}} && rm -rf /var/lib/apt/lists/*
{{/inArray}}
{{#inArray phpTools "wkhtmltopdf"}}

RUN apt-get update -y && apt-get install -y lsb-release \
&& curl -fsSL -o ./wkhtmltopdf.deb https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.$(lsb_release -cs)_amd64.deb \
&& apt-get install -y ./wkhtmltopdf.deb && rm -rf /var/lib/apt/lists/* \
&& rm wkhtmltopdf.deb
{{/inArray}}
{{#hasFeature 'mail'}}

RUN apt-get update -y && apt-get install -y msmtp msmtp-mta && rm -rf /var/lib/apt/lists/* \
&& echo 'sendmail_path = "/usr/sbin/sendmail -t -i"' > /usr/local/etc/php/conf.d/mail.ini
{{/hasFeature}}
{{#inArray phpTools "composer"}}

RUN mkdir -p "$COMPOSER_HOME/cache" \
&& mkdir -p "$COMPOSER_HOME/vendor" \
&& chown -R www-data:www-data $COMPOSER_HOME \
&& chown -R www-data:www-data /var/www
{{/inArray}}

{{> fixuid}}
USER www-data
{{#inArray phpTools "composer"}}

VOLUME /composer/cache
{{/inArray}}
