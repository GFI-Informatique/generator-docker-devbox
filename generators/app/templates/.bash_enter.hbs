########################################################################
# This is a smartcd script.  Commands you type will be run when you
# enter this directory.  The string __PATH__ will be replaced with
# the current path.  Some examples are editing your $PATH or creating
# a temporary alias:
#
#     autostash PATH=__PATH__/bin:$PATH
#     autostash alias restart="service stop; sleep 1; service start"
#
# See http://smartcd.org for more ideas about what can be put here
#######################################################################
if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then
  autostash COMPOSE_PROJECT_DIR=$PWD

  # Define DOCKER_DEVBOX_ENV to customize environment configuration files
  autostash DOCKER_DEVBOX_ENV="${DOCKER_DEVBOX_ENV:-dev}"

  ln -rfs "docker-compose.override.$DOCKER_DEVBOX_ENV.yml" "docker-compose.override.yml"
{{#if mapserverContainer}}
  ln -rfs "mapserver/mapserver.$DOCKER_DEVBOX_ENV.map" "mapserver/mapserver.map"
{{/if}}
fi

_docker_devbox_map_workdir() {
  CONTAINER_PROJECT_DIR="$1"

  RELATIVE_PATH="${PWD/$COMPOSE_PROJECT_DIR/}"
  CONTAINER_PWD="$CONTAINER_PROJECT_DIR$RELATIVE_PATH"
  echo $CONTAINER_PWD
}

# Commands aliases are automatically generated from functions following this pattern
# _alias_[ALIAS]() { [COMMAND] $@;}

_alias_dc() { docker-compose $@;}
_alias_run() { docker-compose run --rm $@;}

{{#if_eq webImage "php" ~}}
_alias_php() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html")" web $@;}
_alias_composer() { docker-compose run --rm --user www-data --entrypoint composer --workdir="$(_docker_devbox_map_workdir "/var/www/html")" web $@;}
{{#if drupalInit ~}}
_alias_drush() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html")" web /var/www/html/vendor/drush/drush/drush $@;}
_alias_drupal() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html")" web /var/www/html/vendor/drupal/console/bin/drupal $@;}
{{/if}}
{{/if_eq}}
{{#if_eq dbImage "postgres" ~}}
_alias_psql() { docker-compose run --user postgres --workdir="$(_docker_devbox_map_workdir "/workdir")" db psql -h db -U {{projectName}} -d {{projectName}} $@;}
{{/if_eq}}
{{#if_eq dbImage "mysql" ~}}
_alias_mysql() { docker-compose exec --user root db mysql -U root $@;}
{{/if_eq}}
{{#if phingContainer ~}}
_alias_phing() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/app")" builder /composer/vendor/phing/phing/bin/phing  $@;}
{{/if}}
{{#if nodeSassContainer ~}}
_alias_node-sass() { docker-compose run --rm node-sass $@;}
{{#if drupalInit ~}}
_alias_build-sass() { docker-compose run --rm --entrypoint node-sass --workdir=/app/web/themes/{{projectName}} node-sass scss -r -o css --importer /usr/local/lib/node_modules/compass-importer/index.js --sourceComments true --source-map true --follow --output-style expanded $@;}
_alias_watch-sass() { docker-compose run --rm --entrypoint chokidar --workdir=/app/web/themes/{{projectName}} node-sass \"./**/*.scss\" --initial --verbose -p -c \"node-sass scss -r -o css --importer /usr/local/lib/node_modules/compass-importer/index.js --sourceComments true --source-map true --follow --output-style expanded" $@;}
{{/if}}
{{/if}}
{{#if mavenContainer ~}}
_alias_mvn() { docker-compose run --rm --workdir="$(_docker_devbox_map_workdir "/usr/src/app")" maven mvn $@;}
{{/if}}

ALIAS_FUNCTIONS=$(declare -F | sed -r 's/^declare -f //' | awk -F= '/^_?alias_/{print $1 }')
if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then echo "Commands: "; fi
for func in $ALIAS_FUNCTIONS; do
  autostash alias $(sed -r 's/^_?alias_//' <<< "$func")="$func"
  if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then echo " - $(sed -r 's/^_?alias_//' <<< "$func")"; fi
done

{{#if init ~}}
if [ -f "./init/init.sh" ] && [ -f ./init/.should-initialize ] && [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then
  read -p "Project is not initialized. Do you want to initialize it ? [y/N]: " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
      echo "Running initialization script: ./init/init.sh"
      ./init/init.sh
      if [ $? -eq 0 ]; then
        echo "Initialization succeded"
      else
        echo "Initialization failed"
      fi
  else
      echo "Initialization skipped"
  fi
fi
{{/if}}

{{#if drupalInit}}
if [ -f "web/sites/default/settings.$DOCKER_DEVBOX_ENV.php" ]; then
  ln -rfs "web/sites/default/settings.$DOCKER_DEVBOX_ENV.php" "web/sites/default/settings.php"
fi
{{/if}}
